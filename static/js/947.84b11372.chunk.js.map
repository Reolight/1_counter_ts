{"version":3,"file":"static/js/947.84b11372.chunk.js","mappings":"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","sources":["common/types/LoginTypes.ts","components/views/LoginWrapper/WelcomeMessage.tsx","components/views/LoginWrapper/LoginWrapper.tsx","components/views/Login/const/LoginSchema.ts","components/views/Login/LoginFormik.tsx","webpack://1_counter_ts/./src/components/views/Login/styles/login.module.css?f920"],"sourcesContent":["import { FormEventHandler } from \"react\";\r\n\r\nexport type LoginProperty = \"email\" | \"password\";\r\n\r\nexport interface LoginState {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const InitialLoginState: LoginState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport interface LoginProps extends LoginState {\r\n  onSubmit?: FormEventHandler;\r\n  onInput: (target: LoginProperty, value: string) => void;\r\n  renderContent?: boolean;\r\n}\r\n\r\nexport interface IParameter {\r\n  name: string;\r\n  value: string;\r\n}\r\n","import { Label } from \"@progress/kendo-react-labels\";\r\n\r\ninterface WelcomeProps {\r\n  email?: string;\r\n}\r\n\r\nexport default function WelcomeMessage(props: WelcomeProps) {\r\n  return (\r\n    <Label style={{ margin: 4 }}>\r\n      {`Hello, ${(!!props.email? props.email : 'guest')}!`}\r\n    </Label>\r\n  );\r\n}\r\n","import { StackLayout } from \"@progress/kendo-react-layout\";\r\nimport WelcomeMessage from \"./WelcomeMessage\";\r\n\r\ninterface IProps {\r\n    email? : string;\r\n    children?: JSX.Element;\r\n}\r\n\r\nexport default function LoginWrapper(props : IProps): JSX.Element {\r\n  return (\r\n    <StackLayout orientation=\"vertical\">\r\n      <WelcomeMessage\r\n        email={props.email}\r\n      />\r\n      {props.children}\r\n    </StackLayout>\r\n  );\r\n}\r\n","import * as Yup from 'yup'\r\n\r\nexport const loginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"ожидается электронная почта\")\r\n      .min(6, \"не менее 6 символов\")\r\n      .required(\"обязательное поле\"),\r\n    password: Yup.string()\r\n      .min(6, \"не менее 6 символов\")\r\n      .required(\"обязательное поле\"),\r\n  });","import { ErrorMessage, Field, Formik, Form } from \"formik\";\r\nimport { InitialLoginState } from \"@common/types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"@stores/hooks\";\r\nimport { update } from \"@stores/redux\";\r\nimport { StackLayout } from \"@progress/kendo-react-layout\";\r\nimport { loginSchema } from \"./const/LoginSchema\";\r\nimport styles from \"./styles/login.module.css\";\r\nimport LoginWrapper from \"@views/LoginWrapper\";\r\n\r\nconst StyledErrorMessage = (props : { name: string}) => (<ErrorMessage name={props.name}>\r\n  {msg => <div className={styles.error}>{msg}</div>}\r\n</ErrorMessage>)\r\n\r\nexport default function LoginFormik(): JSX.Element {\r\n  const navigate = useNavigate();\r\n  const dispatch = useAppDispatch();\r\n  const reduxState = useAppSelector((redState) => redState.loginReducer);\r\n\r\n  return (\r\n    <LoginWrapper email={reduxState.email}>\r\n      <Formik\r\n        initialValues={InitialLoginState}\r\n        validationSchema={loginSchema}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            dispatch(\r\n              update({ email: values.email, password: values.password })\r\n            );\r\n            navigate(\"success\");\r\n            setSubmitting(false);\r\n          });\r\n        }}\r\n      >\r\n        <Form>\r\n          <StackLayout orientation=\"vertical\">\r\n            <div className={styles[\"default-margin\"]}>\r\n              <label\r\n                className={`${styles[\"margin-right\"]} ${styles.required}`}\r\n                htmlFor=\"email\"\r\n              >\r\n                Email:{\" \"}\r\n              </label>\r\n              <StackLayout orientation=\"vertical\">\r\n                <Field className={styles[\"input-field\"]} name=\"email\" />\r\n                <StyledErrorMessage name=\"email\" />\r\n              </StackLayout>\r\n            </div>\r\n\r\n            <div className={styles[\"default-margin\"]}>\r\n              <label\r\n                className={`${styles[\"margin-right\"]} ${styles.required}`}\r\n                htmlFor=\"password\"\r\n              >\r\n                Password:{\" \"}\r\n              </label>\r\n              <StackLayout orientation=\"vertical\">\r\n                <Field\r\n                  className={styles[\"input-field\"]}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                />\r\n                <StyledErrorMessage name=\"password\" />\r\n              </StackLayout>\r\n            </div>\r\n\r\n            <button className={styles.submit} type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </StackLayout>\r\n        </Form>\r\n      </Formik>\r\n    </LoginWrapper>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input-field\":\"login_input-field__tKBTk\",\"default-margin\":\"login_default-margin__L4dqo\",\"margin-right\":\"login_margin-right__b4pyf\",\"required\":\"login_required__PrTP4\",\"error\":\"login_error__fWkAx\",\"submit\":\"login_submit__Ffr-0\"};"],"names":["InitialLoginState","email","password","WelcomeMessage","props","_jsx","Label","style","margin","children","concat","LoginWrapper","_jsxs","StackLayout","orientation","loginSchema","Yup","shape","min","required","StyledErrorMessage","ErrorMessage","name","msg","className","styles","error","LoginFormik","navigate","useNavigate","dispatch","useAppDispatch","reduxState","useAppSelector","redState","loginReducer","Formik","initialValues","validationSchema","onSubmit","values","_ref","setSubmitting","setTimeout","update","Form","htmlFor","Field","type","submit"],"sourceRoot":""}